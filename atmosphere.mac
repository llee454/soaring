/* 
  This library contains equations that represent the atmospheric
  model presented in chapter 5 of Holtz Glider Pilot's Handbook of
  Aeronautical Knowledge (1).

  Standard Atmosphere
  -------------------

  The standard atmosphere is defined by 4 parameters:

  * the standard pressure at sea level: 29.92 in. Hg
  * the standard temperature at sea level: 60 deg. F
  * the standard pressure lapse rate: ~ -1.0 in. Hg/1000 ft
  * the standard temperature lapse rate: ~ 3.6 deg. F/1000 ft

  Altitude Types
  --------------

  Pressure Altitude (observedPressure)
        |      :
        |      : correct for non standard pressure
        |      v
        |    Indicated Altitude (ideal with no calibration errors)
        |      = Pressure Altitude corrected for non standard pressure
        |
        | correct for non standard pressure and temperature
        v
  Density Altitude (observedPressure, observedTemperature)

  Pressure Altitude approximatess Indicated Altitude assuming
  standard pressure.

  Density Altitude approximates True Altitude assuming standard
  temperature lapse rate.
*/

/*
  The equation relating an altitude above sea level (1000 ft),
  a, and the static pressure at a (in. Hg), p, assuming standard
  pressure (29.92 in. Hg) and temperature (60 deg. F) at sea level,
  and a standard temperature lapse rate (-1 in. Hg / 1000 ft).

  Note: see figure 5.1 in [1].
*/
pressureEq : p = pressureStd * %e^(- k * a)$

/*
  The Pressure Lapse Rate (in. Hg / 1000 ft) - i.e. the change in
  static pressure w.r.t altitude above sea level in the Standard
  Atmosphere.

    - 1.0 = - k pressureStd

  Note: see section 5.1 in [1].
*/
pressureRateEq : - 1.0 = subst (0, a, diff (rhs (pressureEq), a))$

/* Represents the pressure coefficient (1 / 1000 ft). */
pressureCoeff : rhs (solve (pressureRateEq, k) [1])$

/*
  Accepts one argument: a, an altitude above sea level (1000 ft);
  and returns the static pressure (in. Hg) at a assuming standard
  pressure (29.92 in. Hg) and temperature (60 deg. F) at sea level,
  and a standard temperature lapse rate (- 1 in. Hg / 1000 ft).

                  - a/pressureStd
    pressureStd %e

*/
pressure (a) := ev (rhs (pressureEq), k = pressureCoeff)$

/*
  The equation expressing Pressure Altitude - i.e the altitude above
  sea level (1000 ft) that you would need to be at to observe the
  given pressure (in. Hg), p, in the Standard Atmosphere.

                        pressureStd
    a = pressureStd log(-----------)
                             p
*/
altPressureEq : solve (subst (pressureCoeff, k, pressureEq), a)[1]$

/*
  Accepts one argument: p, a static pressure (in. Hg); and returns
  the altitude above sea level (1000 ft) that you would need to be
  at in the Standard Atmosphere to observe p.

                    pressureStd
    pressureStd log(-----------)
                         p
*/
altPressure (p) := ev (rhs (altPressureEq), p = p);

/*
  The equation relating Density Altitude (1000 ft), aD, Pressure
  Altitude (1000 ft), aP, and temperature at the corresponding True
  Altitude (deg. F) while assuming standard pressure (29.92 in. Hg)
  at sea level.

         t - tempStd(aP)
    aD = --------------- + aP
               15

  Note: see figure 5.9 in [1].

  Note: Review question 5.2.8 in [1]: Indicated Altitude, when
  set correctly reflects Pressure Altitude. True Altitude when
  temperature lapse rate is accurate (i.e. no temperature inversions,
  etc), reflects Density Altitude. aI ~ aD. aT ~ aP. Hence, this
  equation explains why, on cold days, "true altitude will be lower
  than indicated altitude."
*/
altDensityEq : aD = aP + (t - tempStd (aP))/15$

/*
  The approximate temperature lapse rate (deg. F/1000 ft).

  Note: See figure 5.2 in [1].
*/
tempRate : -3.6$

/*
  Accepts one argument: a, an altitude above sea level (1000 ft); and
  returns the temperature (deg. F) at a in the Standard Atmosphere.
*/
tempStd (a) := 60 + tempRate * a$

/* The pressure (in. Hg) at sea level in the Standard Atmosphere. */
pressureStd : 29.92$

/*
  The equation relating Density Altitude (1000 ft), aD, temperature
  at the altitude above sea level corresponding to aD (deg. F), t,
  and pressure at the altitude above sea level corresponding to aD
  (in. Hg), p, assuming standard pressure (29.92 in. Hg) at sea level.

    aD = kt t - kp ln (p) + ka

  Note: we're effectively using p to compute estimate the altitude
  above sea level (Pressure Altitude), and then apply a correction
  factor to account for non standard temperature. This procedure
  implicitly assumes standard pressure at sea level.
*/
altDensityPressureTempEq : altDensityEq, aP = altPressure (p), radcan, expand, numer$

/*
  Accepts three arguments: a, an Indicated Altitude (1000 ft);
  p, pressure at sea level (in. Hg); and t, temperature (deg. F);
  and returns the Density Altitude (1000 ft) corresponding to a.

  Note: see figure 5.9 in [1].
*/
altIndicatedDensity (a, t, p)
  := ev (rhs (altDensityEq), t = t, aP = a + altPressure (p) * compressionCoeff)$

/*
  TODO

  The equation relating the pressure (in. Hg), p, observed at
  an altitude (1000 ft), aD, given a temperature at sea level
  (deg. F), t.
*/
/* densityPressureEq : solve (altDensityPressureTempEq, p)[1]$ */

/*
  TODO

  The equation relating the density of the air, d (a, t), at an
  altitude (1000 ft), a, where the temperature at sea level (deg. F)
  equals t.
*/
/*
densityEq
  : solve
      (diff
        (subst (a, aD, rhs (densityPressureEq)) =
         integrate (d (x, t), x, a, inf),
         a),
       d (a, t))$
*/     

/*
  TODO

  Accepts two arguments: a, an altitude above sea level (1000 ft);
  t, a temperature (deg. F); and returns the density of the air at
  a assuming standard pressure (29.92 in. Hg) and the temperature
  t at sea level.
*/
/*
density (a, t) := ev (rhs (densityEq), a = a, t = t)$
*/

/*
  The compression coefficient of air (in. Hg).

  Note: here we make a simple extension to the model and assume
  that air is compressible and that the compression effect is linear.

  Note: see Pressure Altitude Correction scale in figure 5.9.
*/
compressionCoeff : 1.824/altPressure (28.0), numer$
